import React, { useEffect, useState } from 'react';
import { useLocation, useNavigate } from 'react-router-dom';
import styles from './quiz.module.css';

const useQuiz = (state) => {
	const getQuiz = () => {
		if (!state) throw new Error('!State');
		console.log('getQuiz');
		const quiz = [];
		Object.keys(state).forEach((key) => {
			quiz.push({
				q: state[key].question,
				a: state[key].answer,
			});
		});
		return quiz;
	};
	/* if you put call function to useState
   this function will be called whenever the component is rendered again for any reason, because, after all, it is a standard function call.
   but React knows that it is not your first render, so it throws away arguments
   and instead returns previously stored values, which is referentially the same.
   */
	const [quiz] = useState(getQuiz);
	return quiz;
};
const Quiz = () => {
	// if this component is refreshed again for any reason,
	// the state of "location" generated by the "useLocation" function
	// becomes a null value.
	const location = useLocation();
	const navigate = useNavigate();

	const quiz = useQuiz(location.state);
	const [play, setPlay] = useState({
		number: 0,
		hint: false,
	});
	useEffect(() => {
		if (!location.state) navigate('/main');
	}, []);

	const quizSubmit = (e) => {
		e.preventDefault();
		setPlay((state) => {
			const number = state.number >= quiz.length - 1 ? 0 : state.number + 1;
			return {
				number,
				hint: false,
			};
		});
	};

	const backButtonClick = () => {
		navigate('/main');
	};

	const switchHint = () => {
		let isShowingTheHint = false;
		if (!play.hint) isShowingTheHint = true;
		setPlay((state) => {
			return {
				...state,
				hint: isShowingTheHint,
			};
		});
	};

	return (
		<div className={styles.main}>
			<h1>QUIZ!!!</h1>
			<div className={styles.navBar}>
				<button onClick={backButtonClick}>back</button>
			</div>
			<div className={styles.quizForm}>
				<h1 className={styles.question}>{quiz[play.number].q || ''}</h1>
				<div className={styles.hintForm}>
					<h2 className={styles.hint}>
						{play.hint ? quiz[play.number].a : 'Show Hint'}
					</h2>
					<button onClick={switchHint}>
						{play.hint ? quiz[play.number].a : 'ShowHint'}
					</button>
				</div>
			</div>
			<form onSubmit={quizSubmit}>
				<input type='text' placeholder='your answer' />
				<input type='submit' value='submit!' />
			</form>
		</div>
	);
};

export default Quiz;
